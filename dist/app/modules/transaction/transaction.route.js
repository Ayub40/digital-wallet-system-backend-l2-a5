"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionRoutes = void 0;
const express_1 = require("express");
// import { UserControllers } from "./user.controller";
const transaction_controller_1 = require("./transaction.controller");
const checkAuth_1 = require("../../middlewares/checkAuth");
const user_interface_1 = require("../user/user.interface");
// import { validateRequest } from "../../middlewares/validateRequest";
const router = (0, express_1.Router)();
// router.post("/register", validateRequest(createUserZodSchema), UserControllers.createUser);
router.post("/addMoney", (0, checkAuth_1.checkAuth)(...Object.values(user_interface_1.Role)), transaction_controller_1.TransactionController.addMoney);
router.post("/withDrawMoney", (0, checkAuth_1.checkAuth)(...Object.values(user_interface_1.Role)), transaction_controller_1.TransactionController.withdrawMoney);
router.post("/send-money", (0, checkAuth_1.checkAuth)(...Object.values(user_interface_1.Role)), transaction_controller_1.TransactionController.sendMoney);
router.get("/get-history", (0, checkAuth_1.checkAuth)(...Object.values(user_interface_1.Role)), transaction_controller_1.TransactionController.getHistory);
router.post("/cash-in", (0, checkAuth_1.checkAuth)(user_interface_1.Role.AGENT), transaction_controller_1.TransactionController.agentCashIn);
router.post("/cash-out", (0, checkAuth_1.checkAuth)(user_interface_1.Role.AGENT), transaction_controller_1.TransactionController.agentCashOut);
router.get("/commission-history", (0, checkAuth_1.checkAuth)(user_interface_1.Role.AGENT), transaction_controller_1.TransactionController.agentCommissionHistory);
router.get("/transactions-history", (0, checkAuth_1.checkAuth)(user_interface_1.Role.ADMIN, user_interface_1.Role.SUPER_ADMIN), transaction_controller_1.TransactionController.getAllTransactions);
exports.TransactionRoutes = router;
